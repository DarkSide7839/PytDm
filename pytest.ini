[tool:pytest]
# Configuration pytest pour PytDm

# Répertoires de tests
testpaths = tests

# Fichiers de tests
python_files = test_*.py *_test.py

# Classes de tests
python_classes = Test*

# Fonctions de tests
python_functions = test_*

# Options par défaut
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --disable-warnings
    --cov=download
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-fail-under=80

# Marqueurs personnalisés
markers =
    slow: marque les tests lents
    integration: marque les tests d'intégration
    unit: marque les tests unitaires
    gui: marque les tests d'interface graphique
    network: marque les tests nécessitant une connexion réseau
    download: marque les tests de téléchargement

# Filtres d'avertissements
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:requests.*

# Configuration des logs
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Configuration de la couverture
[coverage:run]
source = download
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */env/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod
